// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   DataSource.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.Globalization;
using System.Linq;
using System.Runtime.CompilerServices;
using Entities=WPAppStudio.Entities;
using RepositoriesBase=WPAppStudio.Repositories.Base;
using WPAppStudio.Shared;

namespace WPAppStudio.Repositories
{
    /// <summary>
    /// DogbreedsLetterC_DogbreedsLetterC data source.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public class DogbreedsLetterC_DogbreedsLetterC : IDogbreedsLetterC_DogbreedsLetterC 
    {
		private const int MaxResults = 10;
        private readonly ObservableCollection<Entities.DogbreedsLetterCSchema> _data = new ObservableCollection<Entities.DogbreedsLetterCSchema>
		{
          new Entities.DogbreedsLetterCSchema
            {
                Id= new Guid("114abd89-2c53-438c-94a3-884c50a8244f"),
                Title=@"Cairn Terrier",
                Subtitle=@"หินเทอร์เรีมีทนทุกสภาพอากาศเสื้อนอกที่รุนแรงที่สามารถเป็นสีดำ, ครีม, ข้าวสาลี, สีแดง, สีทรายสีเทาหรือ brindled ในใด ๆ ของสีเหล่านี้ บริสุทธิ์สีดำ, สีดำและสีน้ำตาลและสีขาวจะไม่ได้รับอนุญาตจากหลาย สโมสรสุนัข . ในขณะที่การลงทะเบียนของสีขาวแครนส์ได้รับอนุญาตอีกครั้งหลังจากที่ 1917 อเมริกันสุนัขคลับ พวกเขาต้องได้รับการจดทะเบียนเป็น West Highland สุนัขสีขาว . ลักษณะเด่นของแครนส์เป็นที่ brindled แครนส์บ่อยเปลี่ยนสีตลอดอายุการใช้งานของพวกเขา มันไม่ใช่เรื่องแปลกสำหรับ brindled หินให้กลายเป็นความก้าวหน้า",
                Image=@"\Images\Item-ca48c528-821c-43b1-a450-ba2787e3c9fb.jpg",
                Description=@"หินที่เกิดขึ้นในไฮแลนด์ของสกอตแลนด์และ Isle of Skye, การจัดกลุ่มครั้งแรกใน ""สกายเทอร์เรี"" ชั้นพร้อมกับสก็อตและเวสต์ไฮแลนด์ไวท์เทเรีย ในต้นปี 1900 ทั้งสามสายพันธุ์เริ่มที่จะได้รับการอบรมแยก",
			},
          new Entities.DogbreedsLetterCSchema
            {
                Id= new Guid("bc5595e5-976b-4d09-af79-4c932acf1e7f"),
                Title=@"Canaan Dog",
                Subtitle=@"คานาอันสุนัขเป็นสุนัขดั้งเดิมทั่วไปในลักษณะที่ปรากฏ มันเป็นตารางที่สร้างสุนัขขนาดกลางที่มีหัวรูปลิ่มขนาดกลางชันและชุดหูต่ำที่มีฐานกว้างและเคล็ดลับกลม เสื้อชั้นนอกของมันคือหนาแน่นที่รุนแรงและตรงสั้นถึงปานกลางที่มีความยาว เสื้อควรจะใกล้เคียงและมากมายไปตามฤดูกาล ช่วงสีจากสีดำเป็นสีครีมและสีทุกสีน้ำตาลและสีแดงระหว่างมักจะมีเครื่องหมายสีขาวขนาดเล็กหรือสีขาวทั้งหมดกับแพทช์สี จำทุกชนิดที่ได้รับอนุญาตรวมทั้งสีขาวหรือ สีดำมาสก์ . Rudolphina Menzel , ผู้อพยพที่จะ อาณัติปาเลสไตน์ จากออสเตรียมีการศึกษา",
                Image=@"\Images\Item-d9b19970-5a4d-4cbc-9dcd-1928a9b7b52c.jpg",
                Description=@"สุนัขคานาอันเริ่มขึ้นในสมัยโบราณเป็นดุร้ายดั้งเดิมในสมัยโบราณแนนที่ คานาอัน อาศัยอยู่ประมาณที่สอดคล้องกับภูมิภาคครอบคลุมสมัยใหม่ อิสราเอล , ดินแดนปาเลสไตน์ , เลบานอน และชิ้นส่วนทางตะวันตกของ จอร์แดน .
สุนัขตัวนี้เป็นหนึ่งในที่เก่าแก่ที่สุดย้อนหลังไปถึง ในพระคัมภีร์ ครั้ง ถ้ำ Einan และ Hayonim มีเว็บไซต์ที่ยังคงอยู่ที่เก่าแก่ที่สุดของสุนัขได้รับการค้นพบ (มากกว่า 10,000 ปีที่ผ่านมา) ในพระคัมภีร์มีจำนวนของการอ้างอิงถึงสุนัขและสุนัขโรมมิ่งที่ทำงานสำหรับมนุษย์ [2]
ใน ทะเลทรายไซนาย แกะสลักหินตั้งแต่แรกที่จะโฆษณาศตวรรษที่สามแสดงให้เห็นสุนัขที่มีขนาดและรูปร่างที่ดูเหมือนจะเป็นสุนัขประเภทคานาอัน
ใน Ashkelon , สุสานถูกค้นพบเชื่อว่าจะเป็น เซียน จากกลางศตวรรษที่สิบห้าปีก่อนคริสตกาล มันมี 700 สุนัขฝังอยู่ทั้งหมดอย่างรอบคอบในตำแหน่งเดียวกันในด้านของพวกเขากับขาเกร็งและหางซุกในรอบขาหลัง ตามที่นักโบราณคดีพบว่ามีความคล้ายคลึงกันที่แข็งแกร่งระหว่างสุนัขเหล่านี้และ "" เบดูอิน เลี้ยงสุนัข ""หรือสุนัขคานาอัน โลงศพ ลงวันที่จากปลายศตวรรษที่สี่ถูกพบใน เมืองซิดอน เลบานอน ซึ่ง เล็กซานเดอร์มหาราช และพระมหากษัตริย์ของ เมืองซิดอน จะทาสีล่าสิงโตกับสุนัขล่าสัตว์ที่คล้ายกันในการสร้างกับสุนัขของเคล, และที่คล้ายกันในลักษณะที่ปรากฏ กับสุนัขคานาอัน [3]
พวกเขารอดชีวิตมาได้ด้วยวิธีนี้จนกว่า 1930 เมื่อ ดร. Rudolphina Menzel มากับความคิดที่จะใช้ความคิดสร้างสรรค์เหล่านี้ กินของเน่า สุนัขส่วนใหญ่พบใน ทะเลทราย เป็นสุนัขยามกระจาย ของชาวยิว ตั้งถิ่นฐาน Menzel ถูกถามโดย Haganah เพื่อช่วยให้พวกเขาสร้างขึ้นเป็นองค์กรสุนัขบริการ (ต่อมาเป็น หน่วย Oketz ) เธอถูกจับและได้รับสุนัขป่าแนและกึ่งป่า เธอทำงานกับสุนัขกึ่งฟรีและฟรีของที่อยู่อาศัยประเภทเฉพาะล่อพวกเขาเข้าไปในค่ายของเธอและดึงดูดความไว้วางใจของพวกเขา เธอยังจับลูกครอกของลูกสุนัขหาพวกเขาอย่างน่าทึ่งที่ปรับได้เพื่อ domestication ผู้ใหญ่ที่ประสบความสำเร็จเป็นครั้งแรกที่เธอเรียกว่า Dugma (เช่นความหมาย) ดร. Menzel พบสุนัขสูงปรับตัวสุวินัยและง่ายต่อการเชื่อ มันต้องใช้เวลาของเธอเกี่ยวกับหกเดือนที่จะจับ Dugma และภายในไม่กี่สัปดาห์เธอก็สามารถที่จะพาเขาเข้าไปในเมืองและบนรถเมล์
เธอเริ่มโครงการปรับปรุงพันธุ์ในปี 1934 ให้สุนัขทำงานสำหรับทหารและเธอให้ลูกจะเป็นสัตว์เลี้ยงและสุนัขยามบ้าน เธอเริ่มโครงการปรับปรุงพันธุ์การคัดเลือก",
			},
          new Entities.DogbreedsLetterCSchema
            {
                Id= new Guid("e3e8fffd-f258-4931-badd-a576dea7052c"),
                Title=@"Canadian Eskimo Dog",
                Subtitle=@"แคนาดาเอสกิโมสุนัขควรได้รับการสร้างขึ้นอย่างแข็งแรง, แข็งแรง, และการจัดเก็บภาษีในลักษณะที่ปรากฏ มันควรจะเป็นของ ""ร่างกายที่มีประสิทธิภาพให้ความรู้สึกว่าเขาไม่ได้สร้างขึ้นสำหรับความเร็ว แต่สำหรับการทำงานอย่างหนัก."" [10] ในฐานะที่เป็นเรื่องปกติของ สุนัขพันธุ์หนึ่ง สายพันธุ์ก็มีการยกหูเป็นรูปสามเหลี่ยมและขนหางอย่างมากที่จะดำเนินการในช่วง หลังของมัน ผู้ชายควรจะเป็นมากขึ้นอย่างเห็นได้ชัดเป็นชายมากกว่าเพศหญิงที่มีปลีกย่อยกระดูกมีขนาดเล็กและมักจะมีขนสั้นลงเล็กน้อย ความคล้ายคลึงกันเพียงผิวเผิน",
                Image=@"\Images\Item-595450cd-e06d-4785-ac5d-3b9b40b46beb.jpg",
                Description=@"แคนาดาเอสกิโมสุนัขเป็นที่รู้จักกันจะได้รับการอาศัยอยู่ในอาร์กติกเป็นเวลาอย่างน้อย 4,000 ปี  แคนาดาเอสกิโมสุนัขพันธุ์ครั้งแรกโดย คนเล่ ในขณะที่การวิจัยได้แสดงให้เห็นว่ามันมีความเกี่ยวข้องกับ กรีนแลนด์สุนัข , ด้วยความแตกต่างทางพันธุกรรมที่มีความสำคัญน้อยมาก [14] มันเป็นบางครั้งสายพันธุ์เดียวกันโดยเจ้าหน้าที่แม้ว่ากรีนแลนด์สุนัขสามารถวิพากษ์วิจารณ์ว่าเป็นเพราะขาดการปรับปรุงพันธุ์ใดที่เหมาะสมซักถามความถูกต้องเป็นสายพันธุ์บริสุทธิ์  เอสกิโมไม่เคยคิดว่าสุนัข เป็นส่วนหนึ่งของอาณาจักรสัตว์ (uumajuit) แต่เพียงเป็นเครื่องมือในการดำรงอยู่ของมนุษย์  มันเป็นและยังคงเป็น (เท่าที่ จำกัด มาก) ที่ใช้โดยชาวแคนาดาเอสกิโมเป็นสุนัขอเนกประสงค์มักจะนำไป การล่าสัตว์การทำงานของ แมวน้ำ และเกมอื่น ๆ อาร์กติกและอุปกรณ์ลากและผู้คน สำรวจตั้งข้อสังเกตว่าสุนัขมีความสามารถในการติดตามหลุมประทับตราจากระยะทางที่ดีและถูกนำมาใช้เป็นครั้งคราวเพื่อตามล่า หมีขั้วโลก . สุนัขที่ได้รับรายงานที่จะให้ความสนใจในการล่าสัตว์หมีว่าบางครั้งจัดการของพวกเขาตะโกน ""nanuq""  ( เอสกิโม ชื่อหมี) เพื่อส่งเสริมให้พวกเขาเมื่อดึง เลื่อน . สุนัข แต่จะไม่ไล่ตาม หมาป่า และจะหอนตระหนกที่วิธีการของพวกเขา แช่แข็งปัสสาวะสุนัขถูกใช้โดยเอสกิโมเป็นยาและขนของพวกเขาเป็นสิ่งมีค่ามากไปกว่านั้นของหมาป่าเนื่องจากความต้านทานมากขึ้นในการสวมใส่  ในช่วงเวลาแห่ง ความอดอยาก สุนัขจะถูกนำมาใช้เป็น แหล่งอาหารฉุกเฉิน .  แต่สันนิษฐานว่าเคยเป็นหมาป่า tamed หรือ ไฮบริดหมาป่าสุนัข โดยนักสำรวจ,  รวมทั้ง ชาร์ลส์ดาร์วิน เนื่องจากความคล้ายคลึงกันใน ลักษณะและ vocalisations,  การทดสอบทางพันธุกรรมได้แสดงให้เห็นว่าสุนัขเอสกิโมไม่มีบรรพบุรุษหมาป่าที่ผ่านมา ",
			},
		};
	
		
        /// <summary>
        /// Retrieves the data from a static data source, in an observable collection of DogbreedsLetterCSchema items.
        /// </summary>
        /// <returns>An observable collection of DogbreedsLetterCSchema items.</returns>
        public ObservableCollection<Entities.DogbreedsLetterCSchema> GetData(int numPage)
        {								
			return new ObservableCollection<Entities.DogbreedsLetterCSchema>(_data.Skip(MaxResults * numPage).Take(MaxResults));
        }
		
		/// <summary>
        /// Retrieves the data from a static data source, filtered by a filter specification, in an observable collection of DogbreedsLetterCSchema items.
        /// </summary>
		/// <param name="filter">Filter operation specification</param>
        /// <returns>An observable collection of DogbreedsLetterCSchema items.</returns>
        public ObservableCollection<Entities.DogbreedsLetterCSchema> Search(FilterSpecification filter)
        {
            return RepositoriesBase.Filter<Entities.DogbreedsLetterCSchema>.FilterCollection(filter, _data);
        }
		
		/// <summary>
        /// Checks if data source has a element before the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a previous element, false if there is not</returns>
		public bool HasPrevious(Entities.DogbreedsLetterCSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) > 0;
        }
		
		/// <summary>
        /// Checks if data source has a element after the passed as parameter
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>True, if there is a next element, false if there is not</returns>
		public bool HasNext(Entities.DogbreedsLetterCSchema current)
        {
            if (current == null || !_data.Any()) return false;

            return _data.IndexOf(current) < _data.Count - 1;
        }
		
		/// <summary>
        /// Retrieves the previous element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The previous element from items, if it exists. Otherwise, returns null</returns>
        public Entities.DogbreedsLetterCSchema Previous(Entities.DogbreedsLetterCSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.First().Equals(current)) return null;

            return _data[_data.IndexOf(current) - 1];
        }
		
		/// <summary>
        /// Retrieves the next element from source.
        /// </summary>
		/// <param name="current">Current element</param>
        /// <returns>The next element from items, if it exists. Otherwise, returns null</returns>
        public Entities.DogbreedsLetterCSchema Next(Entities.DogbreedsLetterCSchema current)
        {
            if (current == null || !_data.Any()) return null;

            if (_data.Last().Equals(current)) return null;

            return _data[_data.IndexOf(current) + 1];
        }
	}
}

